# üê≥ StockFlow - Docker Compose Development Override
# This file extends docker-compose.yml with development-specific configurations

version: '3.8'

services:
  # üóÑÔ∏è PostgreSQL - Development optimizations
  postgres:
    # Development-specific configurations
    environment:
      # Enable detailed logging for development
      POSTGRES_LOG_STATEMENT: all
      POSTGRES_LOG_DURATION: "on"
      POSTGRES_LOG_MIN_DURATION_STATEMENT: 0
    # Add development tools volume
    volumes:
      - ./database/dev-scripts:/docker-entrypoint-initdb.d/99-dev:ro
    # Development port mapping (explicit for clarity)
    ports:
      - "5432:5432"

  # ‚ö° Backend - Development with hot-reload
  backend:
    # Override build context for development
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    # Development environment variables
    environment:
      NODE_ENV: development
      DEBUG: "app:*"
      LOG_LEVEL: debug
      # Enable TypeScript incremental compilation
      TS_NODE_TRANSPILE_ONLY: true
      TS_NODE_FILES: true
    # Development-specific volumes
    volumes:
      # Hot reload source code
      - ./backend/src:/app/src:cached
      - ./backend/package.json:/app/package.json:ro
      - ./backend/package-lock.json:/app/package-lock.json:ro
      - ./backend/tsconfig.json:/app/tsconfig.json:ro
      - ./backend/jest.config.js:/app/jest.config.js:ro
      # Exclude build output and node_modules from host
      - /app/node_modules
      - /app/dist
    # Development port mapping
    ports:
      - "5000:5000"
      - "9229:9229"  # Node.js debugger port
    # Development command override
    command: ["npm", "run", "dev"]
    # Development restart policy
    restart: unless-stopped

  # ‚öõÔ∏è Frontend - Development with hot-reload
  frontend:
    # Override build context for development
    build:
      context: ./frontend  
      dockerfile: Dockerfile.dev
      target: development
    # Development environment variables
    environment:
      NODE_ENV: development
      # Vite HMR configuration
      CHOKIDAR_USEPOLLING: true
      CHOKIDAR_INTERVAL: 1000
      # Development API URL
      VITE_API_URL: http://localhost:5000
      VITE_API_VERSION: v1
      # Development debugging
      DEBUG: "vite:*"
      # Vite cache and temp directories
      VITE_CACHE_DIR: /tmp/.vite
      VITE_TMP_DIR: /tmp
    # Development-specific volumes
    volumes:
      # Hot reload source code
      - ./frontend/src:/app/src:cached
      - ./frontend/public:/app/public:cached
      - ./frontend/index.html:/app/index.html:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/package-lock.json:/app/package-lock.json:ro
      - ./frontend/vite.config.ts:/app/vite.config.ts:ro
      - ./frontend/tsconfig.json:/app/tsconfig.json:ro
      - ./frontend/tailwind.config.js:/app/tailwind.config.js:ro
      - ./frontend/postcss.config.js:/app/postcss.config.js:ro
      # Exclude build output and node_modules from host
      - /app/node_modules
      - /app/dist
    # Development port mapping
    ports:
      - "3000:3000"
    # Development command override
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"]
    # Development restart policy
    restart: unless-stopped

  # üîß Development Tools
  # Database administration interface
  adminer:
    image: adminer:4-standalone
    container_name: stockflow_adminer_dev
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
      ADMINER_PLUGINS: tables-filter tinymce
    ports:
      - "8080:8080"
    networks:
      - stockflow_network
    depends_on:
      postgres:
        condition: service_healthy

  # üìß MailHog - Email testing (development only)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: stockflow_mailhog_dev
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - stockflow_network